{ config, lib, pkgs, ... }: {
  imports = [
    ./hardware-configuration.nix
    ./modules/caps2esc.nix
  ];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  boot.blacklistedKernelModules = ["amdgpu" "radeon"];
  networking.hostName = "nixos"; 

  #hardware.bluetooth.enable = true;
  #services.blueman.enable = true;

  #networking.wireless.enable = true;
  #networking.wireless.networks = {
  #  "one" = {
  #   psk = "husnain411934@";
  #  };

   # "eduroam" = {
   #   auth = ''
    #    key_mgmt=WPA-EAP
     #   eap=PEAP
      #  identity="fa23-bcs-126@cuilahore.edu.pk"
       # password="admin4669"
        #phase2="auth=MSCHAPV2"
        #anonymous_identity="cuilahore.edu.pk"
      #'';
    #};
  #};

  time.timeZone = "Asia/Karachi";

  services.pipewire = {
    enable = true;
    pulse.enable = true;
  };

  hardware.graphics = {
      enable = true;
      extraPackages = with pkgs; [intel-media-driver vaapiIntel libvdpau-va-gl];
    };

  users.users.lynx = {
    isNormalUser = true;
    extraGroups = [ "wheel" ];
    shell = pkgs.zsh;
    ignoreShellProgramCheck = true;
    packages = with pkgs; [
    ];
  };

  environment.systemPackages = with pkgs; [];

  system.stateVersion = "24.11";
  
  nix.settings.experimental-features = [ "nix-command" "flakes" ];
}

{
  description = "My First Flake";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    home-manager = {
      url = "github:nix-community/home-manager";
      inputs.nixpkgs.follows = "nixpkgs";
    };
    lazyvim-starter = {
      url = "github:LazyVim/starter";
      flake = false;
    };
  };

  outputs = { self, nixpkgs, home-manager, ... }:
	  let
	    lib = nixpkgs.lib;
	  in {
	    nixosConfigurations = {
	      nixos = lib.nixosSystem {
	        system = "x86_64-linux";
		      modules = [
            ./configuration.nix
            ./modules/iwd.nix
	          home-manager.nixosModules.home-manager {
              home-manager.users.lynx = import ./home.nix;
		          home-manager.backupFileExtension = "backup";
              home-manager.extraSpecialArgs = { inputs = self.inputs; };
		        }
          ];
	      };
      };
  };
}
# home.nix
{ pkgs, ... }: {
  imports = [
    ./modules/hyprland.nix
    ./modules/zsh.nix
    ./modules/neovim.nix
    ./modules/ghostty.nix
    ./modules/qutebrowser.nix 
    ./modules/hyprpaper.nix
  ];

  home.username = "lynx";
  home.homeDirectory = "/home/lynx";
  home.stateVersion = "24.11";

  home.packages = with pkgs; [
    git
    qutebrowser
    ripgrep
    lazygit
    fd
    gcc
    mpv
    nodejs_23
    unzip
    aria2
    iwd
  ];

  programs.zsh.enable = true;
 
  programs.git = {
    enable = true;
    userName = "LYNX";
    userEmail = "ramzanlynx@outlook.com";
  };
}
{ config, pkgs, ... }: {
  services.interception-tools = {
    enable = true;
    plugins = [ pkgs.interception-tools-plugins.caps2esc ];
    udevmonConfig = ''
      - JOB: "${pkgs.interception-tools}/bin/intercept -g $DEVNODE | ${pkgs.interception-tools-plugins.caps2esc}/bin/caps2esc -m 1 | ${pkgs.interception-tools}/bin/uinput -d $DEVNODE"
        DEVICE:
          EVENTS:
            EV_KEY: [KEY_CAPSLOCK, KEY_ESC]
    '';
  };

  environment.systemPackages = with pkgs; [
    interception-tools
    interception-tools-plugins.caps2esc
  ];
}
# modules/ghostty.nix
{ pkgs, ... }: {
  home.packages = with pkgs; [ ghostty ];
  programs.ghostty = {
    enable = true;
    settings = {
      theme = "catppuccin-mocha";
      font-size = 24;
      confirm-close-surface = false;
      shell-integration-features = "no-cursor";
      cursor-style = "block";
      mouse-hide-while-typing = true;
      window-padding-x = 10;
      bold-is-bright = true;
    };
  };
}
# modules/hyprland.nix
{ pkgs, ... }: {
  home.packages = with pkgs; [ brightnessctl ];
  wayland.windowManager.hyprland = {
    enable = true;
    systemd.enable = true;
    settings = {
      "$mod" = "SUPER";
      "$terminal" = "ghostty";
      "$menu" = "qutebrowser"; # Fallback, replace with your preferred app if needed
      "$browser" = "qutebrowser";

      monitor = ",preferred,auto,auto";

      env = [
        "XCURSOR_SIZE,24"
        "HYPRCURSOR_SIZE,24"
      ];

      general = {
        gaps_in = 5;
        gaps_out = 20;
        border_size = 2;
        "col.active_border" = "rgba(33ccffee) rgba(00ff99ee) 45deg";
        "col.inactive_border" = "rgba(595959aa)";
        resize_on_border = false;
        allow_tearing = false;
        layout = "dwindle";
      };

      decoration = {
        rounding = 10;
        active_opacity = 1.0;
        inactive_opacity = 1.0;
        shadow = {
          enabled = true;
          range = 4;
          render_power = 3;
          color = "rgba(1a1a1aee)";
        };
        blur = {
          enabled = true;
          size = 3;
          passes = 1;
          vibrancy = 0.1696;
        };
      };

      animations = {
        enabled = true;
        bezier = [
          "easeOutQuint,0.23,1,0.32,1"
          "easeInOutCubic,0.65,0.05,0.36,1"
          "linear,0,0,1,1"
          "almostLinear,0.5,0.5,0.75,1.0"
          "quick,0.15,0,0.1,1"
        ];
        animation = [
          "global, 1, 10, default"
          "border, 1, 5.39, easeOutQuint"
          "windows, 1, 4.79, easeOutQuint"
          "windowsIn, 1, 4.1, easeOutQuint, popin 87%"
          "windowsOut, 1, 1.49, linear, popin 87%"
          "fadeIn, 1, 1.73, almostLinear"
          "fadeOut, 1, 1.46, almostLinear"
          "fade, 1, 3.03, quick"
          "layers, 1, 3.81, easeOutQuint"
          "layersIn, 1, 4, easeOutQuint, fade"
          "layersOut, 1, 1.5, linear, fade"
          "fadeLayersIn, 1, 1.79, almostLinear"
          "fadeLayersOut, 1, 1.39, almostLinear"
          "workspaces, 1, 1.94, almostLinear, fade"
          "workspacesIn, 1, 1.21, almostLinear, fade"
          "workspacesOut, 1, 1.94, almostLinear, fade"
        ];
      };

      dwindle = {
        pseudotile = true;
        preserve_split = true;
      };

      master = {
        new_status = "master";
        new_on_top = false;
      };
      
      misc = {
        force_default_wallpaper = -1;
        disable_hyprland_logo = false;
      };

      input = {
        kb_layout = "us";
        follow_mouse = 1;
        sensitivity = 0;
        touchpad = {
          natural_scroll = false;
        };
      };

      gestures = {
        workspace_swipe = false;
      };

      bind = [
        "$mod, Q, exec, $terminal"
        "$mod, C, killactive,"
        "$mod, M, exec, exit,"
        "$mod, E, exec, $browser"
        "$mod, V, togglefloating,"
        "$mod, R, exec, $menu"
        "$mod, P, pseudo,"
        "$mod, J, togglesplit,"
        "$mod, left, movefocus, l"
        "$mod, right, movefocus, r"
        "$mod, up, movefocus, u"
        "$mod, down, movefocus, d"
        "$mod, 1, workspace, 1"
        "$mod, 2, workspace, 2"
        "$mod, 3, workspace, 3"
        "$mod, 4, workspace, 4"
        "$mod, 5, workspace, 5"
        "$mod, 6, workspace, 6"
        "$mod, 7, workspace, 7"
        "$mod, 8, workspace, 8"
        "$mod, 9, workspace, 9"
        "$mod, 0, workspace, 10"
        "$mod SHIFT, 1, movetoworkspace, 1"
        "$mod SHIFT, 2, movetoworkspace, 2"
        "$mod SHIFT, 3, movetoworkspace, 3"
        "$mod SHIFT, 4, movetoworkspace, 4"
        "$mod SHIFT, 5, movetoworkspace, 5"
        "$mod SHIFT, 6, movetoworkspace, 6"
        "$mod SHIFT, 7, movetoworkspace, 7"
        "$mod SHIFT, 8, movetoworkspace, 8"
        "$mod SHIFT, 9, movetoworkspace, 9"
        "$mod SHIFT, 0, movetoworkspace, 10"
        "$mod, S, togglespecialworkspace, magic"
        "$mod SHIFT, S, movetoworkspace, special:magic"
      ];

      bindm = [
        "$mod, mouse:272, movewindow"
        "$mod, mouse:273, resizewindow"
      ];

      bindel = [
        ",XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+"
        ",XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-"
        ",XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
        ",XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"
        ",XF86MonBrightnessUp, exec, brightnessctl s 10%+"
        ",XF86MonBrightnessDown, exec, brightnessctl s 10%-"
      ];

      bindl = [
        ",XF86AudioNext, exec, playerctl next"
        ",XF86AudioPause, exec, playerctl play-pause"
        ",XF86AudioPlay, exec, playerctl play-pause"
        ",XF86AudioPrev, exec, playerctl previous"
      ];

      windowrule = [
        "suppressevent maximize, class:.*"
        "nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0"
      ];
    };
  };
}
# nix-config/modules/hyprpaper.nix
{ pkgs, ... }: {
  services.hyprpaper = {
    enable = true;
    settings = {
      ipc = "on";
      splash = false;
      preload = [ "${../wallpaper.jpg}" ];
      wallpaper = [ "eDP-1,${../wallpaper.jpg}" ];
    };
  };
}
{
  # Enable iwd as the wireless backend
  networking.wireless.iwd = {
    enable = true;
  };

  # Disable conflicting wireless services
  networking.wireless.enable = false; # Disable default wpa_supplicant
  networking.networkmanager.enable = false; # Disable NetworkManager if present

  # Ensure iwctl is available system-wide
  #environment.systemPackages = [ pkgs.iwctl ];

  # Create the iwd configuration file for the 802.1X network
  systemd.tmpfiles.rules = [
  "w /var/lib/iwd/eduroam.8021x - - - - [Security]\nEAP-Method=PEAP\nEAP-Identity=fa23-bcs-126@cuilahore.edu.pk\nEAP-PEAP-Phase2-Method=MSCHAPV2\nEAP-Password=${builtins.readFile /etc/nixos/secrets/eduroam_password}\n\n[Settings]\nAutoConnect=true"
  "w /var/lib/iwd/one.psk - - - - [Security]\nPassphrase=${builtins.readFile /etc/nixos/secrets/one_password}\n\n[Settings]\nAutoConnect=true"
  "w /var/lib/iwd/PTCL-BB.psk - - - - [Security]\nPassphrase=${builtins.readFile /etc/nixos/secrets/PTCL-BB_password}\n\n[Settings]\nAutoConnect=true"
];
}
# modules/neovim.nix
{ pkgs, inputs, ... }: 

let nvimConfig = pkgs.stdenv.mkDerivation {
    name = "nvim-config";
    src = inputs.lazyvim-starter;
    installPhase = ''
      mkdir -p $out
      cp -r . $out/
    '';
  };

in {
  home.packages = with pkgs; [ neovim ];
  home.file.".config/nvim" = {
    source = nvimConfig;
    recursive = true;
    onChange = ''
      chmod -R u+w $HOME/.config/nvim
    '';
  };
}
{ config, pkgs, ... }: {
  programs.qutebrowser = {
    enable = true;
    loadAutoconfig = false;

    settings = {
      content = {
        blocking.enabled = false;
      };
      colors.webpage.darkmode.enabled = true;
    };

    keyBindings = {
      normal = {
        "M" = "hint links spawn mpv {hint-url}";
        "N" = ''hint links spawn mpv --ytdl-format="bestvideo[height<=720]+bestaudio/best[height<=720]" {hint-url}''; 
      };
    };

    extraConfig = ''
      # Cookie settings
      config.set("content.cookies.accept", "all", "chrome-devtools://*")
      config.set("content.cookies.accept", "all", "devtools://*")

      # Accept-Language header
      config.set("content.headers.accept_language", "", "https://matchmaker.krunker.io/*")

      # User agent settings
      config.set("content.headers.user_agent", "Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}", "https://web.whatsapp.com/")
      config.set("content.headers.user_agent", "Mozilla/5.0 ({os_info}; rv:133.0) Gecko/20100101 Firefox/133.0", "https://accounts.google.com/*")

      # Image settings
      config.set("content.images", True, "chrome-devtools://*")
      config.set("content.images", True, "devtools://*")

      # JavaScript clipboard settings
      config.set("content.javascript.clipboard", "access-paste", "https://chatgpt.com")
      config.set("content.javascript.clipboard", "access-paste", "https://github.com")
      config.set("content.javascript.clipboard", "access-paste", "https://grok.com")
      config.set("content.javascript.clipboard", "access-paste", "https://replit.com")

      # JavaScript enabled settings
      config.set("content.javascript.enabled", True, "chrome-devtools://*")
      config.set("content.javascript.enabled", True, "devtools://*")
      config.set("content.javascript.enabled", True, "chrome://*/*")
      config.set("content.javascript.enabled", True, "qute://*/*")

      # Local content access settings
      config.set("content.local_content_can_access_remote_urls", True, "file:///home/lynx/.local/share/qutebrowser/userscripts/*")
      config.set("content.local_content_can_access_file_urls", False, "file:///home/lynx/.local/share/qutebrowser/userscripts/*")

      # Notification settings
      config.set("content.notifications.enabled", False, "https://www.youtube.com")
    '';
  };
}
# modules/zsh.nix
{ pkgs, ... }: {
  home.packages = with pkgs; [
    zsh-syntax-highlighting
    zsh-autosuggestions
    zsh-powerlevel10k
  ];

  programs.zsh = {
    enable = true;
    autosuggestion.enable = true;
    syntaxHighlighting.enable = true;
    
    initContent = ''
      source ${pkgs.zsh-powerlevel10k}/share/zsh-powerlevel10k/powerlevel10k.zsh-theme
      [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
    '';
  };

  home.file.".p10k.zsh".source = ../p10k.zsh;
}
